name: Cross-Compile Cuberite for ARMv7 (glibc, GCC 13.2.0)

on:
  workflow_dispatch:

jobs:
  build-armv7-glibc:
    name: ARMv7 glibc Build (GCC 13.2.0)
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Cuberite with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            git \
            curl \
            wget \
            file \
            python3 \
            unzip \
            upx

      - name: Download ARMv7 glibc cross toolchain (GCC 13.2.0)
        run: |
          wget https://releases.linaro.org/components/toolchain/binaries/13.2-2023.09/arm-linux-gnueabihf/gcc-linaro-13.2.0-2023.09-x86_64_arm-linux-gnueabihf.tar.xz
          tar -xf gcc-linaro-13.2.0-2023.09-x86_64_arm-linux-gnueabihf.tar.xz
          sudo mv gcc-linaro-13.2.0-2023.09-x86_64_arm-linux-gnueabihf /opt/arm-toolchain

      - name: Configure Cuberite build for ARMv7 glibc
        run: |
          export PATH="/opt/arm-toolchain/bin:$PATH"
          export CC=arm-linux-gnueabihf-gcc
          export CXX=arm-linux-gnueabihf-g++

          mkdir build
          cd build

          cmake .. -G Ninja \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=armv7 \
            -DCMAKE_C_COMPILER=${CC} \
            -DCMAKE_CXX_COMPILER=${CXX} \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=23 \
            -DCMAKE_EXE_LINKER_FLAGS="-static-libstdc++ -static-libgcc" \
            -DCMAKE_CXX_FLAGS="-O2 -march=armv7-a -mfpu=neon -mfloat-abi=hard" \
            -DCMAKE_C_FLAGS="-O2 -march=armv7-a -mfpu=neon -mfloat-abi=hard"

      - name: Build Cuberite
        run: |
          export PATH="/opt/arm-toolchain/bin:$PATH"
          cmake --build build --config Release -j$(nproc)

      - name: Strip and compress the binary
        run: |
          BIN="build/Server/Cuberite"
          if [ -f "$BIN" ]; then
            file "$BIN"
            strip "$BIN" || echo "Strip failed"
            upx --best --lzma "$BIN" || echo "UPX compression skipped"
          fi

      - name: Upload Cuberite binary
        uses: actions/upload-artifact@v4
        with:
          name: cuberite-armv7-glibc
          path: build/Server/
