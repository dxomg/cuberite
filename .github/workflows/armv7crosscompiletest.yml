name: Cross-Compile Cuberite for ARMv7 (musl, static)

on:
  workflow_dispatch:

jobs:
  build-armv7-musl:
    name: ARMv7 (musl) Static Build
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Cuberite with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            git \
            curl \
            wget \
            file \
            zip \
            python3 \
            upx

      - name: Download musl toolchain with GCC 13+ for ARMv7
        run: |
          mkdir -p /opt/musl-cross
          wget https://musl.cc/armv7l-linux-musleabihf-cross.tgz
          tar -xzf armv7l-linux-musleabihf-cross.tgz -C /opt/musl-cross --strip-components=1

      - name: Configure Cuberite for ARMv7 musl static build
        run: |
          export PATH="/opt/musl-cross/bin:$PATH"
          export CC=armv7l-linux-musleabihf-gcc
          export CXX=armv7l-linux-musleabihf-g++

          mkdir build
          cd build

          cmake .. -G Ninja \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=armv7 \
            -DCMAKE_C_COMPILER=${CC} \
            -DCMAKE_CXX_COMPILER=${CXX} \
            -DCMAKE_FIND_ROOT_PATH=/opt/musl-cross/armv7l-linux-musleabihf \
            -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
            -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
            -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=23 \
            -DCMAKE_EXE_LINKER_FLAGS="-static" \
            -DCMAKE_CXX_FLAGS="--static -static-libstdc++ -static-libgcc" \
            -DCMAKE_C_FLAGS="--static -static-libgcc"

      - name: Build Cuberite for ARMv7
        run: |
          export PATH="/opt/musl-cross/bin:$PATH"
          cmake --build build --config Release -j$(nproc)

      - name: List built files
        run: |
          ls -lh build/Server || echo "No files built"

      - name: Strip and compress the Cuberite binary
        run: |
          BIN="build/Server/Cuberite"
          if [ -f "$BIN" ]; then
            file "$BIN"
            strip "$BIN" || echo "Skipping strip"
            upx --best --lzma "$BIN" || echo "UPX compression failed"
          fi

      - name: Upload full Cuberite Server folder
        uses: actions/upload-artifact@v4
        with:
          name: cuberite-armv7-musl-static-server
          path: build/Server/
